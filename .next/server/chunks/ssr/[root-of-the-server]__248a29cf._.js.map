{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/Next.js/07-routing-nextjs/lib/api.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport type { Note, CreateNoteData } from \"../types/note\";\r\nimport type { PaginatedNotes } from \"../types/pagination\";\r\n\r\n\r\nconst TOKEN = process.env.NEXT_PUBLIC_NOTEHUB_TOKEN;\r\nconst API_URL = \"https://notehub-public.goit.study/api/notes\";\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        Authorization: `Bearer ${TOKEN}`,\r\n    },\r\n});\r\n\r\nexport async function fetchNotes(page: number = 1, search: string = \"\", perPage: number = 12): Promise<PaginatedNotes> {\r\n    const response = await api.get<PaginatedNotes>(\"/\", {\r\n        params: { page, search, perPage },\r\n    });\r\n    return response.data;\r\n}\r\n\r\nexport async function createNote(data: CreateNoteData): Promise<Note> {\r\n    const response = await api.post<Note>(\"\", data);\r\n    return response.data;\r\n}\r\n\r\nexport async function deleteNote(id: string): Promise<Note> {\r\n    const response = await api.delete<Note>(`/${id}`);\r\n    return response.data;\r\n}\r\n\r\nexport async function fetchNoteById(id: string): Promise<Note>{\r\n  const response = await api.get<Note>(`/${id}`);\r\n  return response.data;\r\n};"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAKA,MAAM;AACN,MAAM,UAAU;AAChB,MAAM,MAAM,gJAAK,CAAC,MAAM,CAAC;IACrB,SAAS;IACT,SAAS;QACL,eAAe,CAAC,OAAO,EAAE,OAAO;IACpC;AACJ;AAEO,eAAe,WAAW,OAAe,CAAC,EAAE,SAAiB,EAAE,EAAE,UAAkB,EAAE;IACxF,MAAM,WAAW,MAAM,IAAI,GAAG,CAAiB,KAAK;QAChD,QAAQ;YAAE;YAAM;YAAQ;QAAQ;IACpC;IACA,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,WAAW,IAAoB;IACjD,MAAM,WAAW,MAAM,IAAI,IAAI,CAAO,IAAI;IAC1C,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,WAAW,EAAU;IACvC,MAAM,WAAW,MAAM,IAAI,MAAM,CAAO,CAAC,CAAC,EAAE,IAAI;IAChD,OAAO,SAAS,IAAI;AACxB;AAEO,eAAe,cAAc,EAAU;IAC5C,MAAM,WAAW,MAAM,IAAI,GAAG,CAAO,CAAC,CAAC,EAAE,IAAI;IAC7C,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/Next.js/07-routing-nextjs/app/notes/%5Bid%5D/NoteDetails.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/notes/[id]/NoteDetails.client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/notes/[id]/NoteDetails.client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyS,GACtU,uEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/Next.js/07-routing-nextjs/app/notes/%5Bid%5D/NoteDetails.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/notes/[id]/NoteDetails.client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/notes/[id]/NoteDetails.client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/Next.js/07-routing-nextjs/app/notes/%5Bid%5D/page.tsx"],"sourcesContent":["import { NoteDetailsPageProps } from \"../../../types/params\";\r\nimport { HydrationBoundary, dehydrate, QueryClient } from \"@tanstack/react-query\";\r\nimport { fetchNoteById } from \"@/lib/api\";\r\nimport NoteDetailsClient from \"./NoteDetails.client\";\r\n\r\n\r\nexport default async function NoteDetailsPage({ params }: NoteDetailsPageProps) {\r\n  const { id } = await params;\r\n  const queryClient = new QueryClient();\r\n\r\n  await queryClient.prefetchQuery({\r\n    queryKey: [\"note\", id],\r\n    queryFn: () => fetchNoteById(id),\r\n  });\r\n\r\n  return (\r\n    <HydrationBoundary state={dehydrate(queryClient)}>\r\n      <NoteDetailsClient />\r\n    </HydrationBoundary>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AACA;AAAA;AAAA;AACA;AACA;;;;;AAGe,eAAe,gBAAgB,EAAE,MAAM,EAAwB;IAC5E,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IACrB,MAAM,cAAc,IAAI,4LAAW;IAEnC,MAAM,YAAY,aAAa,CAAC;QAC9B,UAAU;YAAC;YAAQ;SAAG;QACtB,SAAS,IAAM,IAAA,2HAAa,EAAC;IAC/B;IAEA,qBACE,8OAAC,yMAAiB;QAAC,OAAO,IAAA,wLAAS,EAAC;kBAClC,cAAA,8OAAC,2JAAiB;;;;;;;;;;AAGxB","debugId":null}}]
}